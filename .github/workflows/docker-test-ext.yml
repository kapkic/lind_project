# This is a basic workflow to help you get started with Actions

name: Docker Run Testing

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: '*' # [ master ]
  pull_request:
    branches: '*' # [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

## We don't need to even download files, we only need the docker container.

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: securesystemslab/lind

    steps:
      # Runs a set of commands using the runners shell
      - name: File-init
        run: | 
          cd ~
          tree -d
          pwd
          echo Tree-done.
      
      - name: Test
        run: | 
          cd /home/lind/lind_project/
          pwd
          echo ls-out
          ls -a
          echo lindfsls-out
          lindfs ls .
          
      - name: Test2
        run: | 
         git --git-dir /home/lind/lind_project/src/lind_glibc/.git remote update origin --prune;
         git --git-dir /home/lind/lind_project/src/native_client/.git remote update origin --prune;
         git --git-dir /home/lind/lind_project/src/safeposix-rust/.git remote update origin --prune;
         git --git-dir /home/lind/lind_project/.git remote update origin --prune;
         echo Repos updated
         git --git-dir /home/lind/lind_project/src/lind_glibc/.git checkout remotes/origin/develop;
         git --git-dir /home/lind/lind_project/src/native_client/.git checkout remotes/origin/develop;
         git --git-dir /home/lind/lind_project/src/safeposix-rust/.git checkout remotes/origin/develop;
         git --git-dir /home/lind/lind_project/.git checkout --force remotes/origin/develop;
         echo Develop checked out
          
      - name: Make-installs
        run: | 
         make rustposix;  
         make nacl; 
         make glibc; 
         make install;	
         make test;
         echo Done.
#        bash -c "docker build --build-arg=BRANCH=github-actions -t securesystemslab/lind ."
#         docker run --ipc=host --cap-add=SYS_PTRACE -it securesystemslab/lind lind /bin/bash -c 'a="regex_test_string"; [[ $a =~ reg.*ng$ ]] && echo "string matched; exec /fork"'
#         docker run --ipc=host --cap-add=SYS_PTRACE -it securesystemslab/lind lind "make test"
     
